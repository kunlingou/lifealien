package com.jiuqi.ldrsz.datashow.kpi;

import java.util.Arrays;
import java.util.DoubleSummaryStatistics;
import java.util.HashSet;
import java.util.IntSummaryStatistics;
import java.util.List;
import java.util.Set;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.stream.Collectors;

import com.jiuqi.ldrsz.datainitial.entiy.Carcost;
import com.jiuqi.ldrsz.datainitial.entiy.Card;
import com.jiuqi.ldrsz.datainitial.entiy.ClassType;
import com.jiuqi.ldrsz.datainitial.entiy.Plan;
import com.jiuqi.ldrsz.datainitial.entiy.Unit;
import com.jiuqi.ldrsz.datainitial.provider.BaseDataObjects;
import com.jiuqi.ldrsz.datainitial.provider.BaseDataProvider;

/**
 * 使用年限执行率
 * @author goukunlin
 *
 */
public class ShiynxzxlKpi implements IKpi{

	@Override
	public Object execute(List<Card> cards, Object... objects) {
		Unit unit = Unit.class.cast(objects[0]);
		
		BaseDataObjects<ClassType> classInfo = new BaseDataProvider().findAll(ClassType.class);
		List<Object> a = Arrays.asList(new String[] {"001C917051A341CBBA6AD3CC955F9B79"});
		Set<String> ids = new HashSet<String>();
		Set<String> types = new HashSet<String>();
		classInfo.getBaseDataObjects().forEach(e->{
			if(a.contains(e.getBs_class())){
				ids.add(e.getId());
				types.add(e.getBs_class());
			}
		});
		//办公设备国产化
		IntSummaryStatistics collect = cards.stream().filter(e->types.contains(e.getTypeid()) && e.getBs_cz_time() != null).collect(Collectors.summarizingInt(e->{
			int year = e.getBs_cz_time().getYear()-e.getBs_qd_time().getYear();
			return year<1?1:year;
		}));
		
		//配置标准中平均使用年限
		AtomicInteger planNum = new AtomicInteger(0);
		BaseDataObjects<Plan> planInfo = new BaseDataProvider().findAll(Plan.class);
		DoubleSummaryStatistics collect2 = planInfo.getBaseDataObjects().stream().filter(e->e.getUnitid().equals(unit.getId()) && ids.contains(e.getBs_type())).collect(Collectors.summarizingDouble(e->e.getBs_year_limit()));
		
//		.forEach(e->{
//			if(e.getUnitid().equals(unit.getId()) && !ids.contains(e.getBs_type())) {
//				planNum.addAndGet(e.getBs_count());
//			}
//		});
		
		Double result = (double)collect.getSum()/collect.getCount();
		return result;
	}

}
