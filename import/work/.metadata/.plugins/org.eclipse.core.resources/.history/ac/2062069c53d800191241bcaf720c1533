package com.jiuqi.ldrsz.datashow.web;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.stream.Collectors;

import com.jiuqi.ldrsz.datashow.entity.OrgParams;

public class WebResponse {
	
	Double caiwrzjsxKpi = 0.00;
	Double shifglfzdrKpi = 0.00;
	Double zhixlKpi = 0.00;
	Double feiyjyl = 0.00;
	Double bangyfztcbqkKpi = 0.00;
	Double dancyxpjfyl = 0.00;
	Double zongfycdelKpi = 0.00;
	Double bangsbgxlKpi = 0.00;
	Double shiynxzxlKpi = 0.00;
	Double bangsbgchlKpi = 0.00;
	
	List<Object[]> zongpm = new ArrayList<Object[]>();

	public WebResponse(Map<String, OrgParams> initData) {
		init(initData);
	}

	private void init(Map<String, OrgParams> initData) {
		int size = initData.size()-1;
		for(Entry<String, OrgParams> e:initData.entrySet()) {
			OrgParams value = e.getValue();
			Double _caiwrzjsxKpi = value.getDouble("CaiwrzjsxKpi");
			Double _shifglfzdrKpi = value.getDouble("ShifglfzdrKpi");
			Double _zhixlKpi = value.getDouble("ZhixlKpi");
			Double _feiyjyl = value.getDouble("Feiyjyl");
			Double _bangyfztcbqkKpi = value.getDouble("BangyfztcbqkKpi");
			Double _dancyxpjfyl = value.getDouble("Dancyxpjfyl");
			Double _zongfycdelKpi = value.getDouble("ZongfycdelKpi");
			Double _bangsbgxlKpi = value.getDouble("BangsbgxlKpi");
			Double _shiynxzxlKpi = value.getDouble("ShiynxzxlKpi");
			Double _bangsbgchlKpi = value.getDouble("BangsbgchlKpi");
			caiwrzjsxKpi += _caiwrzjsxKpi;
			shifglfzdrKpi += _shifglfzdrKpi;
			zhixlKpi += _zhixlKpi;
			feiyjyl += _feiyjyl;
			bangyfztcbqkKpi += _bangyfztcbqkKpi;
			dancyxpjfyl += _dancyxpjfyl;
			zongfycdelKpi += _zongfycdelKpi;
			bangsbgxlKpi += _bangsbgxlKpi;
			shiynxzxlKpi += _shiynxzxlKpi;
			bangsbgchlKpi += _bangsbgchlKpi;
			zongpm.add(new Object[] {value.getUnit().getName(),(_caiwrzjsxKpi+_shifglfzdrKpi+_zhixlKpi+_feiyjyl+_bangyfztcbqkKpi+_dancyxpjfyl+_zongfycdelKpi+_bangsbgxlKpi+_shiynxzxlKpi+_bangsbgchlKpi)});
		}
		caiwrzjsxKpi /= size;
		shifglfzdrKpi /= size;
		zhixlKpi /= size;
		feiyjyl /= size;
		bangyfztcbqkKpi /= size;
		dancyxpjfyl /= size;
		zongfycdelKpi /= size;
		bangsbgxlKpi /= size;
		shiynxzxlKpi /= size;
		bangsbgchlKpi /= size;
		Collections.sort(zongpm, new Comparator<Object[]>() {
			@Override
			public int compare(Object[] o1, Object[] o2) {
				return Double.valueOf(o1[2].toString())<Double.valueOf(o2[2].toString())?1:-1;
			}
		});
	}

}
