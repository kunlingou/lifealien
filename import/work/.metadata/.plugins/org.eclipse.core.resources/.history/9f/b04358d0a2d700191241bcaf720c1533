package com.jiuqi.ldrsz.datashow.kpi;

import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.concurrent.atomic.AtomicInteger;

import com.jiuqi.ldrsz.datainitial.entiy.Card;
import com.jiuqi.ldrsz.datainitial.entiy.ClassType;
import com.jiuqi.ldrsz.datainitial.entiy.Plan;
import com.jiuqi.ldrsz.datainitial.entiy.Staff;
import com.jiuqi.ldrsz.datainitial.entiy.Unit;
import com.jiuqi.ldrsz.datainitial.provider.BaseDataObject;
import com.jiuqi.ldrsz.datainitial.provider.BaseDataObjects;
import com.jiuqi.ldrsz.datainitial.provider.BaseDataProvider;

public class ZhixlKpi implements IKpi{

	@Override
	public Object execute(List<Card> cards, Object... objects) {
		Unit unit = Unit.class.cast(objects[0]);
		
		BaseDataObjects<ClassType> classInfo = new BaseDataProvider().findAll(ClassType.class);
		List<Object> a = Arrays.asList(new String[] {"房屋","软件"});
		Set<String> ids = new HashSet<String>();
		Set<String> types = new HashSet<String>();
		
		classInfo.getBaseDataObjects().forEach(e->{
			if(a.contains(e.getBs_class())){
				ids.add(e.getId());
				types.add(e.getBs_class());
			}
		});
		
		//计划配置资产数量
		AtomicInteger planNum = new AtomicInteger(0);
		
		BaseDataObjects<Plan> planInfo = new BaseDataProvider().findAll(Plan.class);
		planInfo.getBaseDataObjects().forEach(e->{
			ClassType findById = classInfo.findById(e.getBs_type()).get(0);
			if(e.getUnitid().equals(unit.getId()) && ids.contains(e.getBs_type())) {
				planNum.addAndGet(e.getBs_count());
			}
		});
		
		//实际数量
		
		cards.forEach(e->{
			
		});
		
		
		// TODO Auto-generated method stub
		return null;
	}

}
