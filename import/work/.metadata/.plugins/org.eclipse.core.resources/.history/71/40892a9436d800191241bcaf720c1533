package com.jiuqi.ldrsz.datashow.kpi;

import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.concurrent.atomic.AtomicInteger;

import com.jiuqi.ldrsz.datainitial.entiy.Card;
import com.jiuqi.ldrsz.datainitial.entiy.ClassType;
import com.jiuqi.ldrsz.datainitial.entiy.Unit;
import com.jiuqi.ldrsz.datainitial.provider.BaseDataObjects;
import com.jiuqi.ldrsz.datainitial.provider.BaseDataProvider;

/**
 * 人均占用笔记本电脑（数量）
 * @author goukunlin
 *
 */
public class RenjzybjbdnKpi implements IKpi{

	@Override
	public Object execute(List<Card> cards, Object... objects) {
		Unit unit = Unit.class.cast(objects[0]);
		
		BaseDataObjects<ClassType> classInfo = new BaseDataProvider().findAll(ClassType.class);
		//电脑
		HashSet<String> a1 = new HashSet<>(Arrays.asList(new String[] {"3E608FDBF0F141D5B5D71DA8A173441A"}));
		//电脑数量
		AtomicInteger diannNum = new AtomicInteger(0);
		long count = cards.stream().filter(e->a1.contains(e.getTypeid())).count();
		
		//编制人数
		
		
//		Double result = (double) (dayinNum.get()/dayinNum.get());
		if(result<1) {
			return 0;
		}else if(result<1.5) {
			return 1;
		}else if(result<2) {
			return 2;
		}else{
			return 3;
		}
	}
}
